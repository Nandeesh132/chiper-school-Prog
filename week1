Date:20/2/2025
1.Prime number check
//Using Scanner 
import java.util.Scanner;
public class Prime {
	
public static void main (String args []){
    Scanner sc = new Scanner(System.in);
    int n =sc.nextInt();
    int count =0;
	for(int i=1;i<=n;i++) {
		if(n%i==0) {
			count++;
		}
	}
	if(count ==2) {
		System.out.println("Yes it is prime");
	}else {
		System.out.println("No it is not prime");
	}	

}
}
2. Fibonacci sequence
import java.util.Scanner;
public class Fabnoi {
	
public static void main (String args []){
    Scanner sc = new Scanner(System.in);
    int n =sc.nextInt();
    int n1 =1;
    int n2 =1;
    
    
    for(int i=0;i<n;i++){
        System.out.println(n1);
        int n3=n1+n2;
        n1=n2;
        n2=n3;
        
        
    }
	

}
}
3.array of numbers if enter values n
public class Num {
	
public static void main (String args []){
    int [] arr= {1,2,4,7,11,6};
    int n =5;
    int sum =0;
    for(int i =0;i<n;i++){
        sum += arr[i];
    }
	System.out.print(sum);

}
}
4. take the input from the user an int n print 5 prime numbers which are greater than n.
import java.util.Scanner;

public class PrimeNumbers {
    // Function to check if a number is prime
    public static boolean isPrime(int num) {
        if (num <= 1) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i == 0) {
                return false;
            }
        }
        return true;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Take input from the user
        System.out.print("Enter a number (n): ");
        int n = scanner.nextInt();

        int count = 0; // To count the number of primes found
        int current = n + 1; // Start checking from n + 1

        System.out.println("The first 5 prime numbers greater than " + n + " are:");
        while (count < 5) {
            if (isPrime(current)) {
                System.out.println(current);
                count++;
            }
            current++;
        }

        
    }
}
Or
import java.util.Scanner;
public class Num {
    public static int checkPrime(int n){
        int count =0;
        int prime = 0;
        for(int i=1;i<= n;i++){
            if(n%i==0){
                count++;
            }
        }
        if(count == 2){
            prime = n;
        }
        return prime;
    }
	
public static void main (String args []){
    Scanner sc = new Scanner(System.in);
    
    int num = sc.nextInt();
    int count =0;
    while(count<5){
        int pri = checkPrime(num+1);
        if(pri != 0){
            System.out.println(pri);
            count++;
        }
        num++;
    }
    

}
}
5.Letcode Two sum 
class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        for(int i =0;i<nums.length-1;i++){
            for(int j=i+1; j<nums.length;j++){
                if(nums[i]+nums[j]== target){
                    return new int[] {i,j};
                    
                }
            }
        }
        throw new IllegalArgumentException("No two sum solution");
    }
}
6. //geeks for geeks q. of segrigate 0's and 1's
class Main {
    public static void main(String[] args) {
        int[] arr ={0,1,1,0,1,0,0};
        int count0= 0;
        int count1 =0;
        for(int i=0;i<arr.length;i++){
            if(arr[i]==0){
                count0++;
            }else{
                count1++;
            }
        }
        int index=0;
        for(int i=0;i<count0;i++){
            arr[index++]=0;
        }
        for(int i=0;i<count1;i++){
            arr[index++]=1;
        }
      for(int i: arr){
          System.out.print(i);
      }  
        
    }
}
7. Three Twin Primes after the n number n is user input?
import java.util.Scanner;

public class TwinPrimes {
    
    public static boolean isPrime(int num) {
        if (num <= 1) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i == 0) {
                return false;
            }
        }
        return true;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        
        
        int n = sc.nextInt();

        int count = 0; 
        int current = n + 1; 

        
        while (count < 3) {
            
            if (isPrime(current) && isPrime(current + 2)) {
                System.out.println("(" + current + ", " + (current + 2) + ")");
                count++;
            }
            current++; 
        }

        
    }
}
